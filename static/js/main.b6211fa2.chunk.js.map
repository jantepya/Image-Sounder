{"version":3,"sources":["jsx/audioControls.jsx","jsx/imageDrop.jsx","jsx/settings.jsx","audioWorker.js","workerSetup.js","App.js","serviceWorker.js","index.js"],"names":["AudioControls","componentDidMount","this","$el","audioWrapper","current","wavesurfer","WaveSurfer","create","container","waveColor","progressColor","cursorColor","height","responsive","normalize","handleTogglePlay","playPause","onConvertClicked","props","render","isAudioEnabled","audioURL","download","href","className","aria-hidden","load","ref","disabled","onClick","ConvertButtonEnabled","state","playing","pos","React","createRef","Component","DragDropLabel","id","ImageDrop","readFile","file","type","reader","FileReader","onload","loadedFile","onImageLoaded","target","result","setState","imageSrc","fileName","name","showDragDropLabel","dropZoneStyle","backgroundColor","readAsDataURL","dropHandler","event","preventDefault","dataTransfer","items","kind","getAsFile","dragOverHandler","aria-describedby","onChange","e","files","htmlFor","style","onDrop","onDragOver","src","alt","Settings","handleChange","value","sampleRate","time","minfreq","maxfreq","depth","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","min","max","step","addEventListener","t0","performance","now","audio_data","generate_audio_data","data","wave_file","generate_wave","console","log","postMessage","status","iniData","img_data","width","parseFloat","duration","yFactor","parseInt","highest_freq","numSamples","Math","round","tmpData","Int32Array","Int16Array","samplesPerPixel","floor","C","percent","x","rez","pixel_x","y","r","freq","cos","abs","progress","i","length","dataLength","buffer","ArrayBuffer","DataView","offset","writeString","str","setUint8","charCodeAt","setUint32","setUint16","numChannels","j","setInt8","Blob","WebWorker","worker","code","toString","blob","Worker","URL","createObjectURL","App","settings","AudioWorker","handleConversionProgress","handleConversionError","loadProgress","audioBlob","url","isConverting","image","Image","imageEvent","img","convertImageToAudio","window","grayBitmap","imageData","newImageData","ImageData","bufferSize","g","b","a","gray","grayscaleImage","imgData","context","document","createElement","getContext","canvas","drawImage","getImageData","bitmap","float","ProgressBar","label","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","getElementById","process","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b6211fa2.chunk.js","sourcesContent":["import React from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\n\r\nexport default class AudioControls extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            playing: false,\r\n            pos: 0,\r\n        };\r\n\r\n        this.audioWrapper = React.createRef();\r\n    }\r\n\r\n    componentDidMount = function() {\r\n        this.$el = this.audioWrapper.current;\r\n        this.wavesurfer = WaveSurfer.create({\r\n            container: this.$el,\r\n            waveColor: 'grey',\r\n            progressColor: 'hsla(200, 100%, 30%, 0.5)',\r\n            cursorColor: 'blue',\r\n            height: 80,\r\n            responsive: true,\r\n            normalize: true,\r\n        });\r\n    }\r\n    \r\n    handleTogglePlay = () => {\r\n        if (this.wavesurfer) {\r\n            this.wavesurfer.playPause();\r\n        }\r\n    }\r\n\r\n    onConvertClicked = () => {\r\n        this.props.onConvertClicked();\r\n    }\r\n\r\n    render = function () {\r\n\r\n        var isAudioEnabled = this.props.audioURL !== null;\r\n\r\n        var download = isAudioEnabled \r\n            ? <a download href={this.props.audioURL} className=\"btn btn-success btn-lg text-white\"><i className=\"fa fa-download\" aria-hidden=\"true\" /> </a> \r\n            : null;\r\n\r\n        if (this.wavesurfer && this.props.audioURL)\r\n        {\r\n            this.wavesurfer.load(this.props.audioURL);\r\n        }    \r\n\r\n        return (\r\n            <div>\r\n                <div ref={this.audioWrapper} />\r\n\r\n                <hr />\r\n\r\n                <button disabled={!isAudioEnabled} className=\"btn btn-primary btn-lg \" onClick={this.handleTogglePlay}><i className=\"fa fa-play\" aria-hidden=\"true\"></i></button>\r\n                <button disabled={!this.props.ConvertButtonEnabled} className=\"btn btn-primary btn-lg \" onClick={this.onConvertClicked}>Convert</button>\r\n\r\n                {download}\r\n\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nconst DragDropLabel = function () {\r\n    return (\r\n        <div id=\"drag_drop_tag\" className=\"align-items-center\">\r\n            <span><i className=\"fa fa-upload fa-5x\" aria-hidden=\"true\"></i></span>\r\n            <h3>Drag and drop image</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class ImageDrop extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            imageSrc: \"\",\r\n            fileName: \"Choose a file...\",\r\n            showDragDropLabel: true,\r\n            dropZoneStyle: null,\r\n        }\r\n    }\r\n\r\n    readFile = (file) => {\r\n        if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n\r\n            var reader = new FileReader();\r\n            reader.onload = (loadedFile) => {\r\n                this.props.onImageLoaded(loadedFile.target.result);\r\n                this.setState({\r\n                    imageSrc: loadedFile.target.result,\r\n                    fileName: file.name,\r\n                    showDragDropLabel: false,\r\n                    dropZoneStyle: {\r\n                        height: \"auto\",\r\n                        backgroundColor: \"white\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    dropHandler = (event) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        event.preventDefault();\r\n        if (event.dataTransfer.items) {\r\n            // Use DataTransferItemList interface to access the file(s)\r\n            // If dropped items aren't files, reject them\r\n            if (event.dataTransfer.items[0].kind === 'file') {\r\n                var file = event.dataTransfer.items[0].getAsFile();\r\n                this.readFile(file);\r\n            }\r\n        }\r\n    }\r\n\r\n    dragOverHandler = (event) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"input-group\">\r\n                    <div className=\"custom-file\">\r\n                        <input type=\"file\" className=\"custom-file-input\" aria-describedby=\"inputGroupFileAddon01\" onChange={e => this.readFile(e.target.files[0])}/>\r\n                        <label id=\"file_label\" className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">{this.state.fileName}</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"drop_zone\" style={this.state.dropZoneStyle} className=\"btn btn-primary\" onDrop={this.dropHandler} onDragOver={this.dragOverHandler}>\r\n                    {this.state.showDragDropLabel ? <DragDropLabel /> : null}\r\n                    <img src={this.state.imageSrc} id=\"user_loaded_image\" alt=\"\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nexport default class Settings extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            sampleRate: 44100,\r\n            time: 2,\r\n            minfreq: 200,\r\n            maxfreq: 22000,\r\n            depth: 2\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        if (event?.target) {\r\n            this.setState({\r\n                [event.target.name]: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Accordion>\r\n                <Card>\r\n                    <div className=\"settingsToggle\">\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                            Settings for nerds\r\n                        </Accordion.Toggle>\r\n                    </div>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>Sample Rate</th>\r\n                                        <td>\r\n                                            <select name=\"sampleRate\" value={this.state.sampleRate} onChange={this.handleChange}>\r\n                                                <option value=\"32000\">32000 Hz</option>\r\n                                                <option value=\"44100\">44100 Hz</option>\r\n                                                <option value=\"48000\">48000 Hz</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Time</th>\r\n                                        <td>\r\n                                            <input type=\"number\" name=\"time\" min=\"0.5\" max=\"6\" value={this.state.time} step=\"0.5\" onChange={this.handleChange} />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <th>Depth</th>\r\n                                        <td>\r\n                                            <input type=\"number\" name=\"depth\" min=\"1\" max=\"5\" value={this.state.depth} step=\"1\" onChange={this.handleChange} />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <th>Min Frequency (Hz)</th>\r\n                                        <td>\r\n                                            <input type=\"number\" name=\"minfreq\" min=\"0\" max=\"20000\" value={this.state.minfreq} step=\"200\" onChange={this.handleChange} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Max Frequency (Hz)</th>\r\n                                        <td>\r\n                                            <input type=\"number\" name=\"maxfreq\" min=\"0\" max=\"22000\" value={this.state.maxfreq} step=\"200\" onChange={this.handleChange} />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        );\r\n    }\r\n}","export default function() {\n    this.addEventListener(\"message\", e => {\n        var t0 = performance.now();\n\n        var audio_data = generate_audio_data(e.data);\n\n        var wave_file = generate_wave(audio_data, e.data.sampleRate);\n\n        console.log(performance.now() - t0, \"milliseconds\");\n\n        postMessage({ data: wave_file, status: \"ok\" });\n    });\n\n    const generate_audio_data = function (iniData) {\n\n        var img_data = iniData[\"bitmap\"].data;\n        var width = iniData[\"bitmap\"].width;\n        var height = iniData[\"bitmap\"].height;\n        var sampleRate = parseFloat(iniData[\"sampleRate\"]);\n        var duration = parseFloat(iniData[\"time\"]);\n        var minfreq = parseFloat(iniData[\"minfreq\"]);\n        var maxfreq = parseFloat(iniData[\"maxfreq\"]);\n        var yFactor = parseInt(iniData[\"depth\"]);\n\n        //////////////////////////////////////////\n\n        var highest_freq = 0;\n        var numSamples = Math.round(sampleRate * duration);\n\n        var tmpData = new Int32Array(numSamples);\n        var data = new Int16Array(numSamples);\n        var samplesPerPixel = Math.floor(numSamples / width);\n        var C = (maxfreq - minfreq) / height;\n\n        var percent = Math.floor(numSamples / 100);\n\n        for (var x = 0; x < numSamples; x++) {\n            var rez = 0;\n            var pixel_x = Math.floor(x / samplesPerPixel);\n\n            for (var y = 0; y < height; y += yFactor) {\n                var pixel_index = (y * width + pixel_x) * 4;\n                var r = img_data[pixel_index];\n\n                var freq = Math.round(C * (height - y + 1));\n                rez += Math.floor(r * Math.cos(freq * 6.28 * x / sampleRate));\n            }\n\n            tmpData[x] = rez;\n\n            if (Math.abs(rez) > highest_freq) {\n                highest_freq = Math.abs(rez);\n            }\n\n            if (x % percent === 0) {\n                postMessage({ status: \"progress\", progress: x / percent });\n            }\n        }\n\n        for (var i = 0; i < tmpData.length; i++) {\n            data[i] = (32767 * tmpData[i] / highest_freq);\n        }\n        return data;\n    }\n\n    const generate_wave = function (audio_data, sampleRate) {\n\n        var sampleBits = 16;\n        var numChannels = 1;\n\n        var dataLength = audio_data.length * (sampleBits / 8);\n        var buffer = new ArrayBuffer(44 + dataLength);\n        var data = new DataView(buffer);\n        var offset = 0;\n\n        var writeString = function (str) {\n            for (var i = 0; i < str.length; i++) {\n                data.setUint8(offset + i, str.charCodeAt(i));\n            }\n        }\n\n        writeString('RIFF'); offset += 4;\n        data.setUint32(offset, 36 + dataLength, true); offset += 4;\n        writeString('WAVE'); offset += 4;\n        writeString('fmt '); offset += 4;\n        data.setUint32(offset, 16, true); offset += 4;\n        data.setUint16(offset, 1, true); offset += 2;\n        data.setUint16(offset, numChannels, true); offset += 2;\n        data.setUint32(offset, sampleRate, true); offset += 4;\n        data.setUint32(offset, numChannels * sampleRate * (sampleBits / 8), true); offset += 4;\n        data.setUint16(offset, numChannels * (sampleBits / 8), true); offset += 2;\n        data.setUint16(offset, sampleBits, true); offset += 2;\n        writeString('data'); offset += 4;\n        data.setUint32(offset, dataLength, true); offset += 4;\n\n        if (sampleBits === 8) {\n            for (var i = 0; i < audio_data.length; i++, offset++) {\n                var s = Math.max(-1, Math.min(1, audio_data[i]));\n                var val = s < 0 ? s * 0x8000 : s * 0x7FFF;\n                val = parseInt(255 / (65535 / (val + 32768)));\n                data.setInt8(offset, val, true);\n            }\n        } \n        else {\n            for (var j = 0; j < audio_data.length; j++) {\n                data.setInt8(offset, audio_data[j] & 0xFF, true);\n                offset += 1;\n                data.setInt8(offset, (audio_data[j] >> 8) & 0xFF, true);\n                offset += 1;\n            }\n        }\n        var blob = new Blob([data], { type: 'audio/x-wav' });\n        return blob;\n    }\n}","//TODO: find better way to create workers with create-react-app\r\nexport default class WebWorker {\r\n    constructor(worker) {\r\n        const code = worker.toString();\r\n        const blob = new Blob([\"(\" + code + \")()\"]);\r\n        return new Worker(URL.createObjectURL(blob));\r\n    }\r\n}","import React from 'react';\nimport AudioControls from './jsx/audioControls.jsx';\nimport ImageDrop from './jsx/imageDrop.jsx';\nimport Settings from './jsx/settings.jsx';\nimport AudioWorker from './audioWorker.js';\nimport WebWorker from './workerSetup.js';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport './App.css';\n\nconst MAX_WIDTH = 1200;\nconst MAX_HEIGHT = 1200;\n\nconst grayscaleImage = function (imageData) {\n    var newImageData = new ImageData(imageData.width, imageData.height);\n    var bufferSize = 4 * imageData.width * imageData.height;\n\n    if (imageData.data) {\n        for (var i = 0; i < bufferSize; i += 4) {\n            var r = imageData.data[i];\n            var g = imageData.data[i + 1];\n            var b = imageData.data[i + 2];\n            var a = imageData.data[i + 3];\n\n            var gray = 0;\n            if (a !== 0) {\n                gray = 0.21 * r + 0.72 * g + 0.07 * b;\n            }\n\n            newImageData.data[i] = gray;\n            newImageData.data[i + 1] = gray;\n            newImageData.data[i + 2] = gray;\n            newImageData.data[i + 3] = a;\n        }\n    }\n    return newImageData;\n}\n\nconst getImageData = function (imgData) {\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    context.canvas.width = imgData.width;\n    context.canvas.height = imgData.height;\n    context.drawImage(imgData, 0, 0);\n    return context.getImageData(0, 0, imgData.width, imgData.height);\n}\n\nexport default class App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            img: null,\n            loadProgress: 0,\n            audioURL: null,\n            isConverting: false,\n        }\n    }\n\n    componentDidMount = function () {\n        this.settings = React.createRef();\n        this.worker = new WebWorker(AudioWorker);\n        this.worker.addEventListener(\"message\", this.handleConversionProgress);\n        this.worker.addEventListener(\"error\", this.handleConversionError);\n    }\n\n    handleConversionError = (event) => {\n        console.log(event);\n    }\n\n    handleConversionProgress = (event) => {\n        if (event.data.status === \"progress\") {\n            try {\n                if (event.data.progress === 0 || event.data.progress % 10 === 0) {\n                    this.setState({\n                        // Adding 10 to account for delay\n                        loadProgress: event.data.progress + 10,\n                        audioURL: null,\n                    });\n                }\n            }\n            catch (event) {\n                console.log(\"Image Sounder: onprogress error\");\n            }\n        }\n        else if (event.data.status === \"ok\") {\n            try {\n                var audioBlob = event.data.data;\n                var url = URL.createObjectURL(audioBlob);\n                this.setState({\n                    audioURL: url,\n                    loadProgress: 0,\n                    isConverting: false\n                });\n            }\n            catch (event) {\n                console.log(\"Image Sounder: onload error\");\n            }\n        }\n    }\n\n    onImageLoaded = (imageSrc) => {\n        var image = new Image();\n        image.onload = (imageEvent) => {\n            this.setState({\n                img: imageEvent.target,\n            });\n        }\n        image.src = imageSrc;\n    }\n\n    convertImageToAudio = () => {\n        if (!window.Worker) {\n            console.log('Your browser doesn\\'t support web workers.')\n            return;\n        }\n\n        if (this.state.img && this.settings?.current) {\n            var imageData = getImageData(this.state.img);\n            var grayBitmap = grayscaleImage(imageData);\n\n            var data = this.settings.current.state;\n            data.bitmap = grayBitmap;\n\n            this.setState({\n                isConverting: true\n            });\n\n            this.worker.postMessage(data);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App container main text-center\">\n                <header>\n                    <a href=\"https://jonmadethings.com\">\n                        <img src=\"/img/logo.png\" height=\"28\" style={{ float: \"left\" }} alt=\"\" />\n                    </a>\n                    <a href=\"https://github.com/jantepya/Image-Sounder\">\n                        <i className=\"fa fa-github\" aria-hidden=\"true\" style={{ float: \"right\" }} />\n                    </a>\n                </header>\n\n                <ImageDrop\n                    onImageLoaded={this.onImageLoaded}\n                />\n\n                {this.state.isConverting ? <ProgressBar now={this.state.loadProgress} label={this.state.loadProgress + \"%\"} /> : null}\n\n                <br />\n\n                <AudioControls\n                    onConvertClicked={this.convertImageToAudio}\n                    audioURL={this.state.audioURL}\n                    ConvertButtonEnabled={this.state.img !== null && !this.state.isConverting}\n                />\n\n                <Settings ref={this.settings} />\n\n                <hr />\n\n                <footer>\n                    <div className=\"text-center py-3\">2020 Jon</div>\n                </footer>\n            </div>\n        )\n    };\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}